// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VendorApi.Persistence;

namespace VendorApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VendorApi.Domain.Entities.Circular", b =>
                {
                    b.Property<int>("CircularId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CircularDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CircularMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CircularSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnteredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CircularId");

                    b.ToTable("Circulars");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.CircularDetail", b =>
                {
                    b.Property<int>("CircularDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CircularId")
                        .HasColumnType("int");

                    b.Property<int>("CricularId")
                        .HasColumnType("int");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.Property<int>("Viewed")
                        .HasColumnType("int");

                    b.HasKey("CircularDetailId");

                    b.HasIndex("CircularId");

                    b.HasIndex("VendorId");

                    b.ToTable("CircularDetails");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.DeliveryScheduleDetail", b =>
                {
                    b.Property<int>("DeliveryScheduleDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarryForward")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DailyDeliveryQty")
                        .HasColumnType("int");

                    b.Property<int>("DailyReceivedQty")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryScheduleMainId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryScheduleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gap")
                        .HasColumnType("int");

                    b.Property<string>("MaterialDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAPCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TentativeMonth1")
                        .HasColumnType("int");

                    b.Property<int>("TentativeMonth2")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Week1")
                        .HasColumnType("int");

                    b.Property<int>("Week2")
                        .HasColumnType("int");

                    b.Property<int>("Week3")
                        .HasColumnType("int");

                    b.Property<int>("Week4")
                        .HasColumnType("int");

                    b.Property<string>("venMaterialDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("venSAPCode")
                        .HasColumnType("int");

                    b.Property<int>("venTentativeMonth1")
                        .HasColumnType("int");

                    b.Property<int>("venTentativeMonth2")
                        .HasColumnType("int");

                    b.Property<int>("vendorWeek1")
                        .HasColumnType("int");

                    b.Property<int>("vendorWeek2")
                        .HasColumnType("int");

                    b.Property<int>("vendorWeek3")
                        .HasColumnType("int");

                    b.Property<int>("vendortotal")
                        .HasColumnType("int");

                    b.HasKey("DeliveryScheduleDetailId");

                    b.HasIndex("DeliveryScheduleMainId");

                    b.ToTable("DeliveryScheduleDetails");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.DeliveryScheduleMain", b =>
                {
                    b.Property<int>("DeliveryScheduleMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DApprovedBy")
                        .HasColumnType("int");

                    b.Property<string>("DApprovedStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DSEnteredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DSMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DSWorkingdays")
                        .HasColumnType("int");

                    b.Property<int>("DSYear")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryScheduleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("POMainId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.Property<string>("venDSMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("venDSWorkingDays")
                        .HasColumnType("int");

                    b.Property<int>("venDSYear")
                        .HasColumnType("int");

                    b.Property<int>("venModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("venModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("venSupplier")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeliveryScheduleMainId");

                    b.HasIndex("POMainId");

                    b.ToTable("DeliveryScheduleMains");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.GRNDetail", b =>
                {
                    b.Property<int>("GRNDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcceptQty")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GRNMainId")
                        .HasColumnType("int");

                    b.Property<string>("GRNNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GRNQty")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceMainId")
                        .HasColumnType("int");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("POMainId")
                        .HasColumnType("int");

                    b.Property<int>("RecievedQty")
                        .HasColumnType("int");

                    b.Property<int>("RejectQty")
                        .HasColumnType("int");

                    b.Property<string>("RejectReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAPPONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("GRNDetailsID");

                    b.HasIndex("GRNMainId");

                    b.ToTable("GRNDetails");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.GRNMain", b =>
                {
                    b.Property<int>("GRNMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillOfLading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocHeaderText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnteredDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExciseDocNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GRNDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GRNNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InspectionLot")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceMainId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceMainId1")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("J1IANo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("POMainId")
                        .HasColumnType("int");

                    b.Property<string>("PONum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GRNMainId");

                    b.HasIndex("InvoiceMainId1");

                    b.HasIndex("POMainId");

                    b.ToTable("GRNMains");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.InvoiceDetail", b =>
                {
                    b.Property<int>("InvoiceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntereDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnteredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Freight")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceAmount")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceMainId")
                        .HasColumnType("int");

                    b.Property<int>("MCenvat")
                        .HasColumnType("int");

                    b.Property<int>("MCgst")
                        .HasColumnType("int");

                    b.Property<int>("MCgstPercent")
                        .HasColumnType("int");

                    b.Property<int>("MEDCess")
                        .HasColumnType("int");

                    b.Property<int>("MIgst")
                        .HasColumnType("int");

                    b.Property<int>("MIgstPercent")
                        .HasColumnType("int");

                    b.Property<int>("MSHECess")
                        .HasColumnType("int");

                    b.Property<int>("MSTax")
                        .HasColumnType("int");

                    b.Property<int>("MServiceTax")
                        .HasColumnType("int");

                    b.Property<int>("MSgst")
                        .HasColumnType("int");

                    b.Property<int>("MSgstPercent")
                        .HasColumnType("int");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfPKTS")
                        .HasColumnType("int");

                    b.Property<int>("Others")
                        .HasColumnType("int");

                    b.Property<int>("Packaging")
                        .HasColumnType("int");

                    b.Property<string>("PlantCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PricePerUnit")
                        .HasColumnType("int");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalInvoiceAmount")
                        .HasColumnType("int");

                    b.Property<int>("TotalQuantityDespatched")
                        .HasColumnType("int");

                    b.HasKey("InvoiceDetailId");

                    b.HasIndex("InvoiceMainId");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.InvoiceMain", b =>
                {
                    b.Property<int>("InvoiceMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarcodeGenerated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BarcodeText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cenvat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DSID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EDCess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnteredDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EwayNum")
                        .HasColumnType("int");

                    b.Property<string>("Form16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormAmount")
                        .HasColumnType("int");

                    b.Property<string>("FormNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FreightTotalAmount")
                        .HasColumnType("int");

                    b.Property<string>("GRNDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GRNNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GstImpl")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssueYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeOfTransport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfConsignee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OthersTotalAmount")
                        .HasColumnType("int");

                    b.Property<int>("POMainId")
                        .HasColumnType("int");

                    b.Property<int>("PackagingTotalAmount")
                        .HasColumnType("int");

                    b.Property<string>("SHECess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Servicetax")
                        .HasColumnType("int");

                    b.Property<int>("TotalCgst")
                        .HasColumnType("int");

                    b.Property<int>("TotalGrossAmount")
                        .HasColumnType("int");

                    b.Property<int>("TotalIgst")
                        .HasColumnType("int");

                    b.Property<int>("TotalInvoiceAmount")
                        .HasColumnType("int");

                    b.Property<int>("TotalSgst")
                        .HasColumnType("int");

                    b.Property<string>("TransporterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceMainId");

                    b.HasIndex("POMainId");

                    b.ToTable("InvoiceMains");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.PODetail", b =>
                {
                    b.Property<int>("PODetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GrossValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LockStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetValue")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("POMainId")
                        .HasColumnType("int");

                    b.Property<string>("PONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Qty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAPCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PODetailId");

                    b.HasIndex("POMainId");

                    b.ToTable("PODetails");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.POMain", b =>
                {
                    b.Property<int>("POMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ApprovedStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ECCNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EnteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PANNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("POHeaderText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("POValue")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Plant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAPPONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAPVendorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SRVTaxNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TINNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermsConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UnApprovedStatus")
                        .HasColumnType("bit");

                    b.Property<string>("UnapprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UnapprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("POMainId");

                    b.HasIndex("VendorId");

                    b.ToTable("POMains");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.TaxPercentage", b =>
                {
                    b.Property<int>("TaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConditionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlantCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAPPONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(5,3)");

                    b.HasKey("TaxId");

                    b.ToTable("TaxPercentages");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Disabled")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegisterLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CircularDetailId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Disablestatus")
                        .HasColumnType("bit");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnteredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EnteredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("POBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ProvidePortalAccess")
                        .HasColumnType("bit");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAPVendorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAPVendorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("StatementofAccount")
                        .HasColumnType("bit");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("VendorContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("showPrices")
                        .HasColumnType("bit");

                    b.HasKey("VendorId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.CircularDetail", b =>
                {
                    b.HasOne("VendorApi.Domain.Entities.Circular", "Circular")
                        .WithMany("CircularDetails")
                        .HasForeignKey("CircularId");

                    b.HasOne("VendorApi.Domain.Entities.Vendor", "Vendor")
                        .WithMany("CircularDetails")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Circular");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.DeliveryScheduleDetail", b =>
                {
                    b.HasOne("VendorApi.Domain.Entities.DeliveryScheduleMain", "DeliveryScheduleMain")
                        .WithMany("DeliveryScheduleDetails")
                        .HasForeignKey("DeliveryScheduleMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryScheduleMain");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.DeliveryScheduleMain", b =>
                {
                    b.HasOne("VendorApi.Domain.Entities.POMain", "POMain")
                        .WithMany("DeliveryScheduleMain")
                        .HasForeignKey("POMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("POMain");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.GRNDetail", b =>
                {
                    b.HasOne("VendorApi.Domain.Entities.GRNMain", "GRNMain")
                        .WithMany("GRNDetails")
                        .HasForeignKey("GRNMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GRNMain");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.GRNMain", b =>
                {
                    b.HasOne("VendorApi.Domain.Entities.InvoiceMain", "InvoiceMain")
                        .WithMany("GRNMains")
                        .HasForeignKey("InvoiceMainId1");

                    b.HasOne("VendorApi.Domain.Entities.POMain", "POMain")
                        .WithMany("GRNMains")
                        .HasForeignKey("POMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvoiceMain");

                    b.Navigation("POMain");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.InvoiceDetail", b =>
                {
                    b.HasOne("VendorApi.Domain.Entities.InvoiceMain", "InvoiceMain")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvoiceMain");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.InvoiceMain", b =>
                {
                    b.HasOne("VendorApi.Domain.Entities.POMain", "POMain")
                        .WithMany("InvoiceMains")
                        .HasForeignKey("POMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("POMain");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.PODetail", b =>
                {
                    b.HasOne("VendorApi.Domain.Entities.POMain", "POMain")
                        .WithMany("PODetails")
                        .HasForeignKey("POMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("POMain");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.POMain", b =>
                {
                    b.HasOne("VendorApi.Domain.Entities.Vendor", "Vendor")
                        .WithMany("POMains")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.Circular", b =>
                {
                    b.Navigation("CircularDetails");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.DeliveryScheduleMain", b =>
                {
                    b.Navigation("DeliveryScheduleDetails");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.GRNMain", b =>
                {
                    b.Navigation("GRNDetails");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.InvoiceMain", b =>
                {
                    b.Navigation("GRNMains");

                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.POMain", b =>
                {
                    b.Navigation("DeliveryScheduleMain");

                    b.Navigation("GRNMains");

                    b.Navigation("InvoiceMains");

                    b.Navigation("PODetails");
                });

            modelBuilder.Entity("VendorApi.Domain.Entities.Vendor", b =>
                {
                    b.Navigation("CircularDetails");

                    b.Navigation("POMains");
                });
#pragma warning restore 612, 618
        }
    }
}
